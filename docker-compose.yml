version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: alfa-postgres
    environment:
      POSTGRES_USER: alfa
      POSTGRES_PASSWORD: alfa_secret
      POSTGRES_DB: alfa_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U alfa"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alfa-network

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: alfa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - alfa-network

  # OpenTelemetry Collector (Observability)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: alfa-otel
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./infra/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8888:8888"   # Prometheus metrics
      - "13133:13133" # health_check
    networks:
      - alfa-network

  # Jaeger (Distributed Tracing)
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: alfa-jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686" # Jaeger UI
      - "14268:14268" # Jaeger collector
    networks:
      - alfa-network

  # Prometheus (Metrics)
  prometheus:
    image: prom/prometheus:latest
    container_name: alfa-prometheus
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - alfa-network

  # Grafana (Dashboards)
  grafana:
    image: grafana/grafana:latest
    container_name: alfa-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: alfa_admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3002:3000"
    depends_on:
      - prometheus
    networks:
      - alfa-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  alfa-network:
    driver: bridge
